// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistrationForm.Data;

#nullable disable

namespace RegistrationForm.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220104191351_More-data")]
    partial class Moredata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RegistrationForm.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionId = 1,
                            Title = "Yes"
                        },
                        new
                        {
                            Id = 2,
                            QuestionId = 1,
                            Title = "No"
                        },
                        new
                        {
                            Id = 3,
                            QuestionId = 2,
                            Title = "Metinis Rangovas"
                        },
                        new
                        {
                            Id = 4,
                            QuestionId = 2,
                            Title = "Menesinis Rangovas"
                        },
                        new
                        {
                            Id = 5,
                            QuestionId = 3,
                            Title = "Taip"
                        },
                        new
                        {
                            Id = 6,
                            QuestionId = 3,
                            Title = "Ne"
                        },
                        new
                        {
                            Id = 7,
                            QuestionId = 4,
                            Title = "Automatinis"
                        },
                        new
                        {
                            Id = 8,
                            QuestionId = 4,
                            Title = "Manual"
                        });
                });

            modelBuilder.Entity("RegistrationForm.Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Forms");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("RegistrationForm.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FormId = 1,
                            Title = "Reikia atlikti Rangos darbus"
                        },
                        new
                        {
                            Id = 2,
                            FormId = 1,
                            Title = "Rangos darbus atliks"
                        },
                        new
                        {
                            Id = 3,
                            FormId = 1,
                            Title = "Verslo klientas"
                        },
                        new
                        {
                            Id = 4,
                            FormId = 1,
                            Title = "Skaiciavimo metodas"
                        },
                        new
                        {
                            Id = 5,
                            FormId = 1,
                            Title = "Svarbus klientas"
                        });
                });

            modelBuilder.Entity("RegistrationForm.Models.Answer", b =>
                {
                    b.HasOne("RegistrationForm.Models.Question", "Question")
                        .WithMany("PossibleAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("RegistrationForm.Models.Question", b =>
                {
                    b.HasOne("RegistrationForm.Models.Form", null)
                        .WithMany("Questions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RegistrationForm.Models.Form", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("RegistrationForm.Models.Question", b =>
                {
                    b.Navigation("PossibleAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
